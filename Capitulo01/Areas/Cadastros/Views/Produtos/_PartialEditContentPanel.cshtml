@model Modelo.Cadastros.Produto

@if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
{
    <div class="alert alert-danger alert-dismissable">
        @Html.ValidationSummary(false, "Verifique os seguintes errors")
    </div>
}

@Html.HiddenFor(model => model.ProdutoId)

<div class="form-group">
    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control", id = "datepicker" } })
        @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
    </div>

</div>

<div class="form-group">
    @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("CategoriaId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FabricanteId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("FabricanteId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FabricanteId, "", new { @class = "text-danger" })
    </div>
</div>
